configfile: "main_config.yaml"

TARGETYEARS = config['scenario']['target_years']
SIMULATIONYEARS = config['scenario']['climatic_years']
CLIMATICDATASOURCES = config['climatic_data_sources']
ALL_CLIMATICYEARS = range(config['scenario']['climatic_year_from'], config['scenario']['climatic_year_to'])

RESOURCE_PATH = "resources/"
MODEL_PATH = config['model'] + "/"
DOWNLOAD_PATH = RESOURCE_PATH + "raw/"
PEMMDB_PATH = RESOURCE_PATH + "PEMMDB/"
PECD_PATH = RESOURCE_PATH + 'climatic/PECD/'

include: PEMMDB_PATH + "prepare.smk"
include: PECD_PATH + 'prepare.smk'
include: MODEL_PATH + "run.smk"
include: RESOURCE_PATH + 'climatic/retrieve_climate_data.smk'

### build pilot(s) with PEEMDB + PECD and collect additional data sources (if applicable)
if CLIMATICDATASOURCES:
    inputs = [expand(RESOURCE_PATH + "climatic/{CDS}/CY{SY}/generation_vre_timeseries.csv", CDS=CLIMATICDATASOURCES, SY=SIMULATIONYEARS)]
else:
    inputs = []

if config['model'] == 'pypsa':
    inputs.append(expand('pypsa/networks/pilot_elec-vre-hydro_simpl_TY{TY}_{SY}.nc', TY=TARGETYEARS, SY=SIMULATIONYEARS))

if config['model'] == 'remix':
    inputs.append(expand(MODEL_PATH + "results/TY{TY}/CY{CY}/remix_cba.csv", TY=TARGETYEARS, CY=SIMULATIONYEARS))

rule run_all:
    input: inputs

rule preprocess_input_data:
    input:
        inputs,
        expand(PECD_PATH + "TY{TY}/CY{CY}/hydro_inflow_timeseries.csv", TY=TARGETYEARS, CY=SIMULATIONYEARS),
        expand(PECD_PATH + "TY{TY}/CY{CY}/demand_timeseries.csv", TY=TARGETYEARS, CY=SIMULATIONYEARS),
        expand(PECD_PATH + "TY{TY}/CY{CY}/generation_vre_timeseries.csv", TY=TARGETYEARS, CY=SIMULATIONYEARS),

rule prepare_remix_model:
    input:
        inputs,
        expand(MODEL_PATH + "modeldata/TY{TY}/CY{CY}/final_model/converter_coefficient.csv", TY=TARGETYEARS, CY=SIMULATIONYEARS),
